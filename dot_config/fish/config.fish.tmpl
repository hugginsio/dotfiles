#!/usr/bin/env fish

function fish_greeting
    clear
end

function dotfiles_source -d "Sources a configuration file if it exists"
    for arg in $argv
        if test -r $arg && test -f $arg
            set -a DOTFILES_SOURCE_ATTEMPTS $arg
            source $arg
        end
    end
end

# PERF: attempt to set universals only once
if not test "$DOTFILES_ARE_CONFIGURED" = true
    set -U DOTFILES_SOURCE_ATTEMPTS $__fish_config_dir/config.fish
    set -Ux j_path $HOME/Workspaces/Develop/

    # NOTE: send confirmation and suppress failing exit code
    echo y | fish_config theme save "Catppuccin Mocha" || true


    # HACK: prevent realpath failure
    set -Ux ASDF_DIR "$HOME/.asdf"

    # source prompt theme TODO: convert to file for version control
    dotfiles_source "$__fish_config_dir/prompt.fish"

    # source os-specific dotfile
    dotfiles_source "$__fish_config_dir/{{ .chezmoi.os }}.fish"

    # configure paths (https://fishshell.com/docs/current/cmds/fish_add_path.html)
    set -Ux XDG_CONFIG_HOME "$HOME/.config"
    fish_add_path "$HOME/bin"
    fish_add_path "$HOME/.local/bin"

    # set configured flag
    set -U DOTFILES_ARE_CONFIGURED true
end

# PERF: source non-universal or guarenteed availability dotfiles
dotfiles_source $__fish_config_dir/autosource/*.fish

# DIY Fish plugins support. Thank you https://github.com/mattgreen/dotfiles
# Checks if plugin subdirectories exist and handles them if they are not
# already in their respective paths.

set plugins (find "$__fish_config_dir/plugins" -type d -not -path plugins -depth 1)

for plugin in $plugins
    if test -d "$plugin/completions"; and not contains "$plugin/completions" $fish_complete_path
        set fish_complete_path "$plugin/completions" $fish_complete_path
    end
    if test -d "$plugin/functions"; and not contains "$plugin/functions" $fish_function_path
        set fish_function_path "$plugin/functions" $fish_function_path
    end
    for f in "$plugin/conf.d"/*.fish
        builtin source "$f"
    end
end

set -e plugins

# vim:ft=fish
