#+TITLE: Emacs Configuration
#+AUTHOR: Kyle Huggins
#+DESCRIPTION: $DOOMDIR/config.org

* Appearance & Behavior
** Appearance
Configure the color scheme. Catppuccin is pulled in as a package in [[file:packages.el]]
#+begin_src emacs-lisp :tangle yes
(setq catppuccin-flavor 'mocha
      doom-theme 'catppuccin)
#+END_SRC

Remove the banner and footer from =doom-dashboard=.
#+begin_src emacs-lisp :tangle yes
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-banner)
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-footer)
#+END_SRC

** Menus and Toolbars
Customize the frame title format: e.g. =config.org (Org)=
#+begin_src emacs-lisp :tangle yes
(setq-default frame-title-format '("%b (" mode-name ")"))
#+END_SRC

** System Settings
* Keymap
* Editor
Enable relative line numbers.
#+begin_src emacs-lisp :tangle yes
(setq display-line-numbers-type 'relative)
#+END_SRC

Force the use of spaces.
#+begin_src emacs-lisp :tangle yes
(setq-default indent-tabs-mode nil
              tab-width 4)
(setq indent-line-function 'insert-tab)
#+END_SRC

** Font
Configure the =doom-font= family and other font properties.
#+begin_src emacs-lisp :tangle yes
(setq doom-font (font-spec :family "JetBrainsMono Nerd Font" :size 14 :weight 'normal))
(setq-default line-spacing 0.15)
#+END_SRC

* Version Control
* Languages, Frameworks, and Packages
** org-mode
Configure the Org Mode agenda and add the fortnight view to the agenda dispatcher.
#+begin_src emacs-lisp :tangle yes
;; TODO: create seperate function for setting org-agenda-files
(setq hugginsio/org-base-dir "~/Workspaces/Org/"
      hugginsio/current-year (format-time-string "%Y" (current-time))
      hugginsio/current-org-dir (concat hugginsio/org-base-dir hugginsio/current-year "/"))
(make-directory hugginsio/current-org-dir :parents)
(setq org-directory hugginsio/current-org-dir
      org-default-notes-file (concat hugginsio/current-org-dir "notes.org")
      org-agenda-start-day "-3d"
      org-agenda-start-on-weekday nil
      org-agenda-files (directory-files-recursively hugginsio/org-base-dir "\\.org$")
      org-agenda-custom-commands
      '(("f" "Agenda for current fortnight"
         ((agenda "" ((org-agenda-span 14 org-agenda-start-day "-3d" org-agenda-start-on-weekday nil))))
         ))
      )
#+END_SRC

Set all =org-mode= headers to a consistent size and weight.
#+begin_src emacs-lisp :tangle yes
(defun hugginsio/org-mode-headers-hook ()
  "Stop the org-level headers from increasing in height relative to the other text."
  (dolist (face '(org-level-1
                  org-level-2
                  org-level-3
                  org-level-4
                  org-level-5))
    (set-face-attribute face nil :weight 'bold :height 1.0)))
(add-hook 'org-mode-hook #'hugginsio/org-mode-headers-hook)
#+END_SRC

WIP: figuring out LaTeX
#+begin_src emacs-lisp :tangle yes
(with-eval-after-load 'ox-latex
  (add-to-list 'org-latex-classes
               '("org-plain-latex"
                 "\\documentclass{article}
           [NO-DEFAULT-PACKAGES]
           [PACKAGES]
           [EXTRA]"
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
#+END_SRC

Insert timestamp whenever a TODO is completed.
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-log-done 'time)
#+END_SRC

**** org-present
The function called when starting a presentation.
#+begin_src emacs-lisp :tangle yes
(defun hugginsio/org-present-start ()
  (setq line-number-mode nil
        display-line-numbers nil)
  (org-present-read-only)
  (setq header-line-format " ")
  (org-display-inline-images)
)
#+END_SRC

The function called when ending a presentation.
#+begin_src emacs-lisp :tangle yes
(defun hugginsio/org-present-quit ()
  (setq line-number-mode t
        display-line-numbers 'relative)
  (org-present-read-write)
  (setq header-line-format nil)
  (org-remove-inline-images)
)
#+END_SRC

The function called when navigating slides during the presentation.
#+begin_src emacs-lisp :tangle yes
(defun hugginsio/org-present-prepare-slide (buffer-name heading)
  (org-overview)
  (org-show-entry)
  (org-show-children)
)
#+END_SRC

Link the above functions to the =org-present= hooks.
#+begin_src emacs-lisp :tangle yes
(add-hook 'org-present-mode-hook 'hugginsio/org-present-start)
(add-hook 'org-present-mode-quit-hook 'hugginsio/org-present-quit)
(add-hook 'org-present-after-navigate-functions 'hugginsio/org-present-prepare-slide)
#+END_SRC

** hl-line-mode
Only enable =hl-line-mode= in certain modes.
#+begin_src emacs-lisp :tangle yes
(setq global-hl-line-modes '(org-agenda-mode))
#+END_SRC

** vterm-mode
Set =vterm='s shell to =fish=.
#+begin_src emacs-lisp :tangle yes
(setq vterm-shell "fish -i -l")
#+END_SRC

** projectile
Configure the Projectile search paths.
#+begin_src emacs-lisp :tangle yes
(setq projectile-project-search-path '("~/Workspaces/Org"
                                       ("~/Workspaces/Develop" . 1)
                                       "~/.local/share/chezmoi"
                                       ))
#+END_SRC

* Tools
