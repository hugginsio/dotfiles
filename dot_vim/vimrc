" Acknowledgements:
" https://github.com/tpope/vim-sensible
" https://github.com/amix/vimrc
" https://github.com/michaeljmcd/dotfiles

" Leader
let mapleader=" "
nnoremap <SPACE> <Nop>

" Set relative and normal  numbers.
set nu rnu

" If the running Vim lacks support for the Fish shell, use Bash instead.
if &shell =~# 'fish$' && (v:version < 704 || v:version == 704 && !has('patch276'))
  set shell=/usr/bin/env\ bash
endif

" Theme
set termguicolors

if $TERM ==# "xterm"
  set background=dark
endif

" Disable vi compatibility if it is enabled.
if &compatible
  set nocompatible
endif

if has('reltime')
  set incsearch
end

" Use CTRL-L to clear the highlighting of 'hlsearch' (off by default) and call :diffupdate.
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>
endif

" Replace the check for a tags file in the parent directory of the current file with a check in every ancestor directory.
if has('path_extra') && (',' . &g:tags . ',') =~# ',\./tags,'
  setglobal tags-=./tags tags-=./tags; tags^=./tags;
endif

" Allow color schemes to do bright colors without forcing bold.
if &t_Co == 8 && $TERM !~# '^Eterm'
  set t_Co=16
endif

" Ignore common files and directories.
set wildignore=*.o,*~,*.pyc,*.dll,*.pdb,*.nupkg,*.exe,*.jpg,*.png,*.bin,tags,**/target/**,**/node_modules/**
if has("win16") || has("win32")
    set wildignore+=.git\*,.hg\*,.svn\*
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
endif

" Visual mode pressing * or # searches for the current selection (from Michael Naumann).
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>

" Remap VIM 0 to first non-blank character.
map 0 ^

if has("mac") || has("macunix")
  nmap <D-j> <M-j>
  nmap <D-k> <M-k>
  vmap <D-j> <M-j>
  vmap <D-k> <M-k>
endif

" Delete trailing white space on save, useful for some filetypes.
fun! CleanExtraSpaces()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    silent! %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfun

if has("autocmd")
    autocmd BufWritePre *.txt,*.sh,*.ts,*.js,*.go,*.md,*.lua :call CleanExtraSpaces()
endif

" Disable scrollbars.
set guioptions-=r
set guioptions-=R
set guioptions-=l
set guioptions-=L

" Enable persistent undo.
try
    if !isdirectory($HOME . "/.vim/undo")
        call mkdir($HOME . "/.vim/undo", "p", 0700)
    endif

    set undodir=~/.vim/undo
    set undofile
catch
endtry

" Bash like keys for the command line.
cnoremap <C-A>		<Home>
cnoremap <C-E>		<End>
cnoremap <C-K>		<C-U>
cnoremap <C-P> <Up>
cnoremap <C-N> <Down>

" Shortcut for timestamp.
iab xdate <C-r>=strftime("%Y-%m-%d %H:%M:%S")<cr>

" YAML particulars.
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

" Disable a legacy behavior that can break plugin maps.
if has('langmap') && exists('+langremap') && &langremap
  set nolangremap
endif

if !(exists('g:did_load_filetypes') && exists('g:did_load_ftplugin') && exists('g:did_indent_on'))
  filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

" From `:help :DiffOrig`.
if exists(":DiffOrig") != 2
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_
        \ | diffthis | wincmd p | diffthis
endif

" Correctly highlight $() and other modern affordances in filetype=sh.
if !exists('g:is_posix') && !exists('g:is_bash') && !exists('g:is_kornshell') && !exists('g:is_dash')
  let g:is_posix = 1
endif

" Enable the :Man command shipped inside Vim's man filetype plugin.
if exists(':Man') != 2 && !exists('g:loaded_man') && &filetype !=? 'man' && !has('nvim')
  runtime ftplugin/man.vim
endif

" Backup to ~/.vim/backup.
if !isdirectory($HOME . "/.vim/backup")
    call mkdir($HOME . "/.vim/backup", "p", 0700)
endif

set backup
set backupdir=~/.vim/backup
set backupskip=~/.vim/backup
set directory=~/.vim/backup
set writebackup

" Open Netrw
if has("nvim")
    nnoremap <silent> <leader>e :Lexplore<CR>
endif

au FocusGained,BufEnter * checktime
autocmd FileType netrw setl bufhidden=wipe
let g:netrw_banner=0
let g:netrw_browse_split = 4
let g:netrw_fastbrowse=0
let g:netrw_hide=1
let g:netrw_keepdir=0
let g:netrw_list_hide='^\./$'
let g:netrw_liststyle=0
let g:netrw_localcopydircmd='cp -r'
let g:netrw_winsize=20
let vim_markdown_folding_disabled = 1
set ai
set autoindent
set backspace=indent,eol,start
set belloff=all
set cmdheight=1
set commentstring=""
set complete=.,w,b,u,t,kspell
set display=lastline
set encoding=utf-8
set encoding=utf8
set expandtab
set ffs=unix,dos,mac
set fillchars=""
set formatoptions=tcqj
set hidden
set history=100
set hlsearch
set ignorecase
set joinspaces
set langnoremap
set laststatus=2
set listchars="tab:> ,trail:-,nbsp:+"
set magic
set mouse=nvi
set mousemodel=popup_setpos
set noerrorbells
set nofsync
set noshowmode
set nostartofline
set novisualbell
set nrformats=bin,hex
set regexpengine=0
set ruler
set scrolloff=3
set sessionoptions=unix,slash
set shiftwidth=2
set shortmess=filnxtToOF
set showcmd
set showmatch
set si
set sidescroll=1
set signcolumn=yes
set smartcase
set smarttab
set softtabstop=2
set splitbelow
set splitright
set switchbuf=uselast
set t_vb=
set tabpagemax=50
set tabstop=2
set tm=500
set ttimeout
set ttimeoutlen=300
set ttyfast
set viewoptions=folds,cursor,curdir,unix,slash
set viminfo=!,'100,<50,s10,h
set whichwrap+=<,>,h,l
set wildmenu
set wildoptions="pum,tagfile"
set wrap

hi! link netrwMarkFile Search
